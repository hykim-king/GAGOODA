<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.gagooda_project.mapper.RefundMapper">
    <resultMap id="refundMap" type="RefundDto" autoMapping="true">
        <id column="refund_id" property="refundId"/>
        <result column="user_id" property="userId"/>
        <result column="order_detail_id" property="orderDetailId"/>
        <result column="order_id" property="orderId"/>
        <result column="address_id" property="addressId"/>
        <result column="cancel_amount" property="cancelAmount"/>
        <result column="reg_date" property="regDate"/>
        <result column="mod_date" property="modDate"/>
        <result column="post_code" property="postCode"/>
        <result column="address_detail" property="addressDetail"/>
        <result column="receiver_name" property="receiverName"/>
        <result column="receiver_phone" property="receiverPhone"/>
        <result column="img_code" property="imgCode"/>
        <result column="rf_det" property="rfDet"/>
        <result column="rfr_det" property="rfrDet"/>
        <result column="re_type" property="reType"/>
        <association property="orderDto"
                     column="order_id"
                     select="com.example.gagooda_project.mapper.OrderMapper.findById"
                     fetchType="lazy"/>
        <association property="rfDetDto"
                     column="rf_det"
                     select="com.example.gagooda_project.mapper.CommonCodeMapper.findByDetCode"
                     fetchType="lazy"/>
        <association property="rfrDetDto"
                     column="rfr_det"
                     select="com.example.gagooda_project.mapper.CommonCodeMapper.findByDetCode"
                     fetchType="lazy"/>
        <association property="orderDetailDto"
                     column="order_detail_Id"
                     select="com.example.gagooda_project.mapper.OrderDetailMapper.findById"
                     fetchType="lazy"/>
        <collection property="imageList"
                    column="img_code"
                    select="com.example.gagooda_project.mapper.ImageMapper.listByImgCode"
                    fetchType="lazy"/>
    </resultMap>
    <insert id="insertOne" useGeneratedKeys="true" keyProperty="refundId">
        INSERT INTO refund (user_id, uname, email, phone, order_detail_id, order_id, address_id, cancel_amount, reason,
                    post_code, address, address_detail, receiver_name, receiver_phone, elevator, img_code, rfr_det, re_type)
                VALUES (#{userId}, #{uname}, #{email}, #{phone}, #{orderDetailId}, #{orderId}, #{addressId}, #{cancelAmount}, #{reason}, #{postCode},
                    #{address}, #{addressDetail}, #{receiverName}, #{receiverPhone}, #{elevator}, #{imgCode}, #{rfrDet}, #{reType})
    </insert>
    <update id="updateOne">
        UPDATE refund SET
            <if test="auth.equals('admin')">reply=#{refund.reply}, mod_date=NOW(), rf_det=#{refund.rfDet} WHERE refund_id = #{refund.refundId}</if>
            <if test="auth.equals('user')">rf_det = "rf1", mod_date=NOW() WHERE refund_id = #{refund.refundId}</if>

    </update>
    <select id="pageByUserIdAndDate" resultMap="refundMap">
        SELECT * FROM refund WHERE user_id = #{userId}
            <if test="startDate != null and endDate != null and !startDate.equals(endDate)">
                AND DATE(reg_date) BETWEEN #{startDate} AND #{endDate}
            </if>
            <if test="startDate != null and endDate != null and startDate.equals(endDate)">
                AND reg_date LIKE #{startDate}
            </if>
            <if test="detCode != null and 'end'.equals(detCode)">
                AND rf_det IN ('rf1','rf7','rf8')
            </if>
            <if test="detCode != null and 'notEnd'.equals(detCode)">
                AND rf_det NOT IN ('rf1','rf7','rf8')
            </if>
            <if test="detCode != null and 'all'.equals(detCode)"/>
            <if test="period != null">
                AND reg_date BETWEEN DATE_SUB(NOW(), INTERVAL #{period} DAY) AND NOW()
            </if>
        ORDER BY reg_date DESC LIMIT #{paging.startRow},#{paging.rows}
    </select>
    <select id="countByUserIdAndDate" resultType="int">
        SELECT COUNT(*) FROM refund WHERE user_id = #{userId}
        <if test="startDate != null and endDate != null and !startDate.equals(endDate)">
            AND DATE(reg_date) BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="startDate != null and endDate != null and startDate.equals(endDate)">
            AND reg_date LIKE #{startDate}
        </if>
        <if test="detCode != null and 'end'.equals(detCode)">
            AND rf_det IN ('rf1','rf7','rf8')
        </if>
        <if test="detCode != null and 'notEnd'.equals(detCode)">
            AND rf_det NOT IN ('rf1','rf7','rf8')
        </if>
        <if test="detCode != null and 'all'.equals(detCode)"/>
        <if test="period != null">
            AND reg_date BETWEEN DATE_SUB(NOW(), INTERVAL #{period} DAY) AND NOW()
        </if>
    </select>
    <select id="findById" resultMap="refundMap">
        SELECT * FROM refund WHERE refund_id = #{id}
    </select>
    <select id="pageAll" resultMap="refundMap" parameterType="hashmap">
        SELECT * FROM refund
         <where>
            <if test="searchDiv != '' and searchWord != ''">
                AND ${searchDiv} LIKE #{searchWord}
            </if>
             <if test="dateType != '' and starDate != '' and endDate != '' and !startDate.equals(endDate)">
                 AND DATE(${dateType}) BETWEEN #{startDate} AND #{endDate}
             </if>
             <if test="dateType != '' and starDate != '' and endDate != '' and startDate.equals(endDate)">
                 AND ${dateType} LIKE #{startDate}
             </if>
            <if test="rfDet != ''">
                AND rf_det in (${rfDet})
            </if>
         </where>
        ORDER BY ${paging.orderField} ${paging.direct} LIMIT #{paging.startRow},#{paging.rows}
    </select>
    <select id="countByOrderId" resultType="int" parameterType="hashmap">
        SELECT COUNT(*) FROM refund WHERE order_id = #{orderId}
    </select>
    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM refund
    </select>
    <select id="countByUserId" resultType="int">
        SELECT COUNT(*) FROM refund WHERE user_id = #{userId}
    </select>
    <select id="countPageAll" resultType="java.lang.Integer" parameterType="hashmap">
        SELECT COUNT(*) FROM refund
        <where>
            <if test="searchDiv != '' and searchWord != ''">
                AND ${searchDiv} LIKE #{searchWord}
            </if>
            <if test="dateType != '' and starDate != '' and endDate != '' and !startDate.equals(endDate)">
                AND DATE(${dateType}) BETWEEN #{startDate} AND #{endDate}
            </if>
            <if test="dateType != '' and starDate != '' and endDate != '' and startDate.equals(endDate)">
                AND ${dateType} LIKE #{startDate}
            </if>
            <if test="rfDet != ''">
                AND rf_det in (${rfDet})
            </if>
        </where>
    </select>
    <select id="findByOrderDetailId" resultMap="refundMap">
        SELECT * FROM refund WHERE order_detail_id = #{orderDetailId}
    </select>
</mapper>